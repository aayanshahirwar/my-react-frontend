pipeline {
  environment {
    dockerImageName = "santoshahirwar/reactstatic_test"
  }

  agent any

  stages {
    stage('Checkout Source') {
      steps {
        git branch: 'main', url: 'https://github.com/aayanshahirwar/my-react-frontend.git'
      }
    }

    // âœ… ADD THIS NEW STAGE - Build React App
    stage('Build React App') {
      steps {
        script {
          sh '''
            echo "Installing npm dependencies..."
            npm install
            echo "Building React app..."
            npm run build
            echo "React build completed!"
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          dockerImage = docker.build dockerImageName
        }
      }
    }

    stage('Pushing Image') {
      environment {
        registryCredential = 'santosh-dockerhub'
      }
      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', registryCredential) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        withKubeConfig(
          caCertificate: '', 
          clusterName: 'kubernetes', 
          contextName: '', 
          credentialsId: 'k8-cred', 
          namespace: 'webapps', 
          restrictKubeConfigAccess: false, 
          serverUrl: 'https://172.20.1.43:6443'
        ) {
          sh 'kubectl apply -f deploymentservice.yaml'
          sh 'kubectl rollout restart deployment/reactapp-deployment -n webapps'
          sh 'kubectl rollout status deployment/reactapp-deployment -n webapps --timeout=300s'
        }
      }
    }

    stage('Verify Deployment') {
      steps {
        withKubeConfig(
          caCertificate: '', 
          clusterName: 'kubernetes', 
          contextName: '', 
          credentialsId: 'k8-cred', 
          namespace: 'webapps', 
          restrictKubeConfigAccess: false, 
          serverUrl: 'https://172.20.1.43:6443'
        ) {
          sh 'kubectl get pods -n webapps'
          sh 'kubectl get svc -n webapps'
          sh 'kubectl get deployment -n webapps'
        }
      }
    }
  }

  post {
    failure {
      echo 'Pipeline failed! Check the React build logs.'
    }
    success {
      echo 'Pipeline completed successfully! New React app is deployed.'
    }
  }
}
